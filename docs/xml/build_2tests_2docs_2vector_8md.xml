<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="build_2tests_2docs_2vector_8md" kind="file" language="Markdown">
    <compoundname>vector.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>dsx::vector<sp/>|<sp/><sp/>Features</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Constructor(s):<sp/>A<sp/>constructor<sp/>is<sp/>used<sp/>to<sp/>initialize<sp/>the<sp/>vector<sp/>object.<sp/>It<sp/>may<sp/>have<sp/>various<sp/>forms,<sp/>such<sp/>as<sp/>a<sp/>default<sp/>constructor,<sp/>a<sp/>constructor<sp/>with<sp/>initial<sp/>size,<sp/>or<sp/>a<sp/>constructor<sp/>that<sp/>initializes<sp/>the<sp/>vector<sp/>with<sp/>given<sp/>values</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Destructor:<sp/>A<sp/>destructor<sp/>is<sp/>responsible<sp/>for<sp/>releasing<sp/>any<sp/>allocated<sp/>memory<sp/>and<sp/>cleaning<sp/>up<sp/>resources<sp/>when<sp/>the<sp/>vector<sp/>object<sp/>goes<sp/>out<sp/>of<sp/>scope</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Capacity<sp/>Methods</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`size()`:<sp/>Returns<sp/>the<sp/>current<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`capacity()`:<sp/>Returns<sp/>the<sp/>current<sp/>size<sp/>of<sp/>the<sp/>allocated<sp/>storage<sp/>(how<sp/>many<sp/>elements<sp/>the<sp/>vector<sp/>can<sp/>hold<sp/>without<sp/>reallocating)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`empty()`:<sp/>Checks<sp/>whether<sp/>the<sp/>vector<sp/>is<sp/>empty<sp/>or<sp/>not</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`reserve()`:<sp/>Requests<sp/>a<sp/>change<sp/>in<sp/>capacity<sp/>without<sp/>changing<sp/>the<sp/>vector&apos;s<sp/>size</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`shrink_to_fit()`:<sp/>Requests<sp/>the<sp/>container<sp/>to<sp/>reduce<sp/>its<sp/>capacity<sp/>to<sp/>fit<sp/>its<sp/>size</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Element<sp/>Access<sp/>Methods</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`operator[]`:<sp/>Accesses<sp/>elements<sp/>in<sp/>the<sp/>vector<sp/>using<sp/>the<sp/>subscript<sp/>operator</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`at()`:<sp/>Accesses<sp/>elements<sp/>in<sp/>the<sp/>vector<sp/>with<sp/>bounds<sp/>checking,<sp/>throwing<sp/>an<sp/>exception<sp/>if<sp/>the<sp/>index<sp/>is<sp/>out<sp/>of<sp/>range</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`front()`:<sp/>Returns<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>first<sp/>element<sp/>in<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`back()`:<sp/>Returns<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>last<sp/>element<sp/>in<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Modifiers</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`push_back()`:<sp/>Adds<sp/>an<sp/>element<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`pop_back()`:<sp/>Removes<sp/>the<sp/>last<sp/>element<sp/>from<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`insert()`:<sp/>Inserts<sp/>elements<sp/>at<sp/>a<sp/>specific<sp/>position</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`erase()`:<sp/>Removes<sp/>elements<sp/>at<sp/>a<sp/>specific<sp/>posaition<sp/>or<sp/>within<sp/>a<sp/>range</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`clear()`:<sp/>Removes<sp/>all<sp/>elements<sp/>from<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`resize()`:<sp/>Changes<sp/>the<sp/>size<sp/>of<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`swap()`:<sp/>Swaps<sp/>the<sp/>contents<sp/>of<sp/>two<sp/>vectors</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Other<sp/>Useful<sp/>Methods</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`begin(),<sp/>end()`:<sp/>Return<sp/>iterators<sp/>to<sp/>the<sp/>beginning<sp/>and<sp/>end<sp/>of<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`rbegin(),<sp/>rend()`:<sp/>Return<sp/>reverse<sp/>iterators<sp/>to<sp/>the<sp/>beginning<sp/>and<sp/>end<sp/>of<sp/>the<sp/>vector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>`emplace()`:<sp/>Constructs<sp/>an<sp/>element<sp/>in-place<sp/>at<sp/>the<sp/>given<sp/>position</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#####<sp/>These<sp/>are<sp/>some<sp/>common<sp/>methods<sp/>you<sp/>would<sp/>typically<sp/>find<sp/>in<sp/>a<sp/>basic<sp/>vector<sp/>implementation.<sp/>More<sp/>complex<sp/>vector<sp/>implementations<sp/>might<sp/>include<sp/>additional<sp/>methods<sp/>and<sp/>features<sp/>for<sp/>specialized<sp/>use<sp/>cases</highlight></codeline>
    </programlisting>
    <location file="build/tests/docs/vector.md"/>
  </compounddef>
</doxygen>
