<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="v__exceptions_8hpp" kind="file" language="C++">
    <compoundname>v_exceptions.hpp</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">string</includes>
    <includedby refid="main_8cxx" local="yes">main.cxx</includedby>
    <includedby refid="vector_8hpp" local="yes">src/vector/vector.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/vector/v_exceptions.hpp</label>
        <link refid="v__exceptions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>exception</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/vector/v_exceptions.hpp</label>
        <link refid="v__exceptions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>src/vector/vec_benchmark.hpp</label>
        <link refid="vec__benchmark_8hpp_source"/>
      </node>
      <node id="4">
        <label>src/vector/vec_test.hpp</label>
        <link refid="vec__test_8hpp_source"/>
      </node>
      <node id="2">
        <label>src/vector/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classdsx_1_1structs_1_1exceptions_1_1_negative_index_execption" prot="public">dsx::structs::exceptions::NegativeIndexExecption</innerclass>
    <innernamespace refid="namespacedsx">dsx</innernamespace>
    <innernamespace refid="namespacedsx_1_1structs">dsx::structs</innernamespace>
    <innernamespace refid="namespacedsx_1_1structs_1_1exceptions">dsx::structs::exceptions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBDSX_VEC_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBDSX_VEC_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dsx::structs::exceptions<sp/>{</highlight></codeline>
<codeline lineno="8" refid="classdsx_1_1structs_1_1exceptions_1_1_negative_index_execption" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdsx_1_1structs_1_1exceptions_1_1_negative_index_execption" kindref="compound">NegativeIndexExecption</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>what<sp/>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>()</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;NegativeIndexExecption:<sp/>index<sp/>became<sp/>negative&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="15"><highlight class="normal">};</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/vector/v_exceptions.hpp"/>
  </compounddef>
</doxygen>
